//********************************
//* Autor : Carmelo Salafia      *
//* eMail : cswi@gmx.de          *
//* Datum : 10.08.2005           *
//********************************

import VisualLogic.*;
import VisualLogic.variables.*;
import java.awt.*;
import java.awt.event.*;
import tools.*;
import javax.swing.*;
import javax.swing.filechooser.*;
import java.io.File;

public class GetFile extends JVSMain
{
  public VSString out=new VSString();
  public VSString extension = new VSString();
  public VSBoolean ok;
  private Image image;
  
  private String letztesVerzeichniss=".";

  public void paint(java.awt.Graphics g)
  {
    drawImageCentred(g,image);
  }
  
  
 public void init()
  {
    initPins(0,1,0,1);
    setSize(32+22,32+4);
    initPinVisibility(false,true,false,true);
    
    String fileName=element.jGetSourcePath()+"icon.gif";
    image=element.jLoadImage(fileName);

    setPin(0,ExternalIF.C_STRING,element.PIN_OUTPUT); // Out
    setPin(1,ExternalIF.C_BOOLEAN,element.PIN_INPUT); // Path

    element.jSetPinDescription(0,"Out");
    element.jSetPinDescription(1,"Process");
    
    element.jSetCaptionVisible(true);
    element.jSetCaption("GetFile");

    setName("GetFile");
    extension.setValue("txt");
  }


  public void initInputPins()
  {
    ok=(VSBoolean)element.getPinInputReference(1);

    if (ok==null)
    {
      ok=new VSBoolean(false);
    }
  }
  
  public void initOutputPins()
  {
    element.setPinOutputReference(0,out);
  }
  
    public void setPropertyEditor()
  {
    element.jAddPEItem("Extension",extension, 0,0);
  }

  public void propertyChanged(Object o)
  {
    element.jRepaint();
  }

  
  public String goAndGetFile()
  {
    JFileChooser chooser  = new JFileChooser();
    chooser.setCurrentDirectory(new java.io.File(letztesVerzeichniss));

    chooser.addChoosableFileFilter(new FileFilter()
    {
        public boolean accept(File f)
        {
            if (f.isDirectory()) return true;
            return f.getName().toLowerCase().endsWith("."+extension.getValue());
        }
        public String getDescription () { return extension.getValue(); }
    });

    int returnVal = chooser.showOpenDialog(null);

    if(returnVal == JFileChooser.APPROVE_OPTION)
    {
      letztesVerzeichniss=chooser.getCurrentDirectory().getPath();
      return chooser.getSelectedFile().getAbsolutePath();
    } else return "";
  }
  
  public void process()
  {
     out.setChanged(false);
     if (ok.isChanged() && ok.getValue()==true)
     {
       String filename=goAndGetFile();
       out.setValue(filename);
       out.setChanged(true);
     }
  }
  
  public void resetValues()
  {
    out.setChanged(false);
  }


  public void loadFromStream(java.io.FileInputStream fis)
  {
      extension.loadFromStream(fis);
  }

  public void saveToStream(java.io.FileOutputStream fos)
  {
      extension.saveToStream(fos);
  }


}


