//********************************
//* Autor : Carmelo Salafia      *
//* eMail : cswi@gmx.de          *
//* Datum : 10.08.2005           *
//********************************


import VisualLogic.*;
import VisualLogic.variables.*;
import tools.*;
import java.awt.*;
import java.awt.event.*;
import java.util.*;

public class UniversalDoubleToString extends JVSMain
{
  private Image image;

  private VSObject in;
  private VS2DString out= new VS2DString(1,1);

  public void xpaint(java.awt.Graphics g)
  {
    if (image!=null) drawImageCentred(g,image);
  }
  
  public void onDispose()
  {
    if (image!=null)
    {
      image.flush();
      image=null;
    }
  }

  public void init()
  {
    initPins(0,1,0,1);
    setSize(32+20,32+4);
    initPinVisibility(false,true,false,true);
    element.jSetInnerBorderVisibility(true);

    image=element.jLoadImage(element.jGetSourcePath()+"icon.gif");
    
    setPin(0,ExternalIF.C_ARRAY2D_STRING,element.PIN_OUTPUT); // OUT
    setPin(1,ExternalIF.C_VARIANT,element.PIN_INPUT);         // IN
    
    setName("UniversalDoubleToString");
  }

  public void initInputPins()
  {
    in=(VSObject)element.getPinInputReference(1);
  }
  
  public void initOutputPins()
  {
    element.setPinOutputReference(0,out);
  }

  public void checkPinDataType()
  {

    boolean pinInB=element.hasPinWire(1);

    int dtB=element.C_VARIANT;

    if (pinInB) dtB=element.jGetPinDrahtSourceDataType(1);

    //element.jSetPinDataType(0,dtB);
    element.jSetPinDataType(1,dtB);

    element.jRepaint();
  }


  public void start()
  {
  }


  private void convert_2DDouble_to_2DString(VS2DDouble in)
  {
    out= new VS2DString(in.getColumns(),in.getRows());

    for (int i=0;i<in.getRows();i++)
    {
      for (int j=0;j<in.getColumns();j++)
      {
        out.setValue(j,i,""+in.getValue(j,i));
      }
    }
  }



  public void process()
  {

    if (in instanceof VS2DDouble)
    {
      convert_2DDouble_to_2DString((VS2DDouble)in);
      element.setPinOutputReference(0,out);
      element.notifyPin(0);
    }

  }


}

