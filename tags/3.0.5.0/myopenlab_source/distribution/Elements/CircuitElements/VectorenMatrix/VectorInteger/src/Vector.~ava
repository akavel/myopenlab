//**************************************
//* Autor       : Carmelo Salafia      *
//* eMail       : cswi@gmx.de          *
//* geändert am : 04.12.2006           *
//**************************************

import VisualLogic.*;
import VisualLogic.variables.*;
import tools.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;



public class Vector extends JVSMain
{
  private VSPropertyDialog more = new VSPropertyDialog();
  private Image image;
  private VS1DInteger vector= new VS1DInteger(0);

  public void onDispose()
  {
   if (image!=null)
   {
     image.flush();
     image=null;
   }
  }



  public void paint(java.awt.Graphics g)
  {
    drawImageCentred(g,image);
  }


  public void init()
  {
    setSize(34+10,36);
    initPins(0,1,0,0);

    element.jSetInnerBorderVisibility(false);

    setPin(0,ExternalIF.C_ARRAY1D_INTEGR,element.PIN_OUTPUT);

    image=element.jLoadImage(element.jGetSourcePath()+"icon.png");
    
    setName("VectorInteger");
    
    element.jSetResizable(false);
    
  }
  
  public void xOnInit()
  {
  }


  public void initInputPins()
  {

  }

  public void initOutputPins()
  {
    VS1DInteger ref= new VS1DInteger(0);
    ref.copyValueFrom(vector);
    element.setPinOutputReference(0,ref);
    // Später nur noch mit Referenzen Arbeiten!
  }

  public void setPropertyEditor()
  {
    element.jAddPEItem("Werte..",more, 0,0);
    localize();
  }

  private void localize()
  {
    int d=6;
    String language;

    language="en_US";
    element.jSetPEItemLocale(d,language,"Values...");


    language="es_ES";
    element.jSetPEItemLocale(d,language,"Values...");
  }



  public void propertyChanged(Object o)
  {
    if (o.equals(more))
    {
      MyTableEditor frm = new MyTableEditor(null,true);

      frm.setInputs(vector.getValues());
      frm.setVisible(true);


      if (frm.result)
      {
        int[] data=frm.getInputs();
        vector.setValues(data);
      }

    }
  }
  

  public void start()
  {
  
    element.notifyPin(0);
  }

  public void process()
  {

  }

  public void loadFromStream(java.io.FileInputStream fis)
  {
    vector.loadFromStream(fis);
  }

  public void saveToStream(java.io.FileOutputStream fos)
  {
    vector.saveToStream(fos);
  }

}
