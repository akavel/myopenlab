//********************************
//* Autor : Carmelo Salafia      *
//* eMail : cswi@gmx.de          *
//* Datum : 10.08.2005           *
//********************************


import VisualLogic.*;
import VisualLogic.variables.*;
import tools.*;
import java.awt.*;
import java.awt.event.*;

import de.wenzlaff.twusb.schnittstelle.TWUsb;
import de.wenzlaff.twusb.schnittstelle.TWUsbException;




public class K8055 extends JVSMain
{
  private boolean isOpen=false;

  private boolean oldInp1,oldInp2,oldInp3,oldInp4,oldInp5;
  public boolean xStop=false;
  private Boolean a0=false,a1=false,a2=false,a3=false,a4=false,a5=false,a6=false;
  private boolean inp1=false;
  private boolean inp2=false;
  private boolean inp3=false;
  private boolean inp4=false;
  private boolean inp5=false;
  private boolean running=false;
  
  private VSBoolean inOut1;
  private VSBoolean inOut2;
  private VSBoolean inOut3;
  private VSBoolean inOut4;
  private VSBoolean inOut5;
  private VSBoolean inOut6;
  private VSBoolean inOut7;
  private VSBoolean inOut8;
  
  private VSDouble inAC1;
  private VSDouble inAC2;
  
  private VSBoolean outInp1 = new VSBoolean();
  private VSBoolean outInp2 = new VSBoolean();
  private VSBoolean outInp3 = new VSBoolean();
  private VSBoolean outInp4 = new VSBoolean();
  private VSBoolean outInp5 = new VSBoolean();
  
  private VSDouble outA1=new VSDouble();
  private VSDouble outA2=new VSDouble();
  


  private javax.swing.Timer timer;

  public K8055()
  {
    ActionListener taskPerformer = new ActionListener()
    {
     public void actionPerformed(ActionEvent evt)
     {

        //if (isOpen)
        {
         try
         {
           inp1 = TWUsb.ReadDigitalChannel(TWUsb.DIGITALER_EINGABE_KANAL_1);
           inp2 = TWUsb.ReadDigitalChannel(TWUsb.DIGITALER_EINGABE_KANAL_2);
           inp3 = TWUsb.ReadDigitalChannel(TWUsb.DIGITALER_EINGABE_KANAL_3);
           inp4 = TWUsb.ReadDigitalChannel(TWUsb.DIGITALER_EINGABE_KANAL_4);
           inp5 = TWUsb.ReadDigitalChannel(TWUsb.DIGITALER_EINGABE_KANAL_5);


           double A1 = TWUsb.ReadAnalogChannel(1);
           double A2 = TWUsb.ReadAnalogChannel(2);

           if (outInp1!=null) outInp1.value=inp1;
           if (outInp2!=null) outInp2.value=inp2;
           if (outInp3!=null) outInp3.value=inp3;
           if (outInp4!=null) outInp4.value=inp4;
           if (outInp5!=null) outInp5.value=inp5;

           if (outA1!=null) outA1.value=A1;
           if (outA2!=null) outA2.value=A2;


           if (inOut1.value) TWUsb.SetDigitalChannel(TWUsb.DIGITALER_AUSGABE_KANAL_1); else TWUsb.ClearDigitalChannel(TWUsb.DIGITALER_AUSGABE_KANAL_1);
           if (inOut2.value) TWUsb.SetDigitalChannel(TWUsb.DIGITALER_AUSGABE_KANAL_2); else TWUsb.ClearDigitalChannel(TWUsb.DIGITALER_AUSGABE_KANAL_2);
           if (inOut3.value) TWUsb.SetDigitalChannel(TWUsb.DIGITALER_AUSGABE_KANAL_3); else TWUsb.ClearDigitalChannel(TWUsb.DIGITALER_AUSGABE_KANAL_3);
           if (inOut4.value) TWUsb.SetDigitalChannel(TWUsb.DIGITALER_AUSGABE_KANAL_4); else TWUsb.ClearDigitalChannel(TWUsb.DIGITALER_AUSGABE_KANAL_4);
           if (inOut5.value) TWUsb.SetDigitalChannel(TWUsb.DIGITALER_AUSGABE_KANAL_5); else TWUsb.ClearDigitalChannel(TWUsb.DIGITALER_AUSGABE_KANAL_5);
           if (inOut6.value) TWUsb.SetDigitalChannel(TWUsb.DIGITALER_AUSGABE_KANAL_6); else TWUsb.ClearDigitalChannel(TWUsb.DIGITALER_AUSGABE_KANAL_6);
           if (inOut7.value) TWUsb.SetDigitalChannel(TWUsb.DIGITALER_AUSGABE_KANAL_7); else TWUsb.ClearDigitalChannel(TWUsb.DIGITALER_AUSGABE_KANAL_7);
           if (inOut8.value) TWUsb.SetDigitalChannel(TWUsb.DIGITALER_AUSGABE_KANAL_8); else TWUsb.ClearDigitalChannel(TWUsb.DIGITALER_AUSGABE_KANAL_8);


           TWUsb.OutputAnalogChannel(TWUsb.ANALOGER_AUSGABE_KANAL_1, (int)inAC1.value);
           TWUsb.OutputAnalogChannel(TWUsb.ANALOGER_AUSGABE_KANAL_2, (int)inAC2.value);


           }
         catch(TWUsbException ex)
         {
          System.out.println(ex);
         }
         catch (Exception ex)
         {
          System.out.println(ex);
         }
        }
      }
    };

    timer = new javax.swing.Timer(1, taskPerformer);

  }

   public void paint(java.awt.Graphics g)
   {

   }
   
  public void init()
  {
    initPins(0,7,0,10);
    setSize(80,120);
    
    element.jSetLeftPinsVisible(true);
    element.jSetRightPinsVisible(true);

    setPin(0,ExternalIF.C_BOOLEAN,element.PIN_OUTPUT);
    setPin(1,ExternalIF.C_BOOLEAN,element.PIN_OUTPUT);
    setPin(2,ExternalIF.C_BOOLEAN,element.PIN_OUTPUT);
    setPin(3,ExternalIF.C_BOOLEAN,element.PIN_OUTPUT);
    setPin(4,ExternalIF.C_BOOLEAN,element.PIN_OUTPUT);
    
    setPin(5,ExternalIF.C_DOUBLE,element.PIN_OUTPUT);
    setPin(6,ExternalIF.C_DOUBLE,element.PIN_OUTPUT);
    
    setPin(7,ExternalIF.C_BOOLEAN,element.PIN_INPUT);
    setPin(8,ExternalIF.C_BOOLEAN,element.PIN_INPUT);
    setPin(9,ExternalIF.C_BOOLEAN,element.PIN_INPUT);
    setPin(10,ExternalIF.C_BOOLEAN,element.PIN_INPUT);
    setPin(11,ExternalIF.C_BOOLEAN,element.PIN_INPUT);
    setPin(12,ExternalIF.C_BOOLEAN,element.PIN_INPUT);
    setPin(13,ExternalIF.C_BOOLEAN,element.PIN_INPUT);
    setPin(14,ExternalIF.C_BOOLEAN,element.PIN_INPUT);
    
    setPin(15,ExternalIF.C_DOUBLE,element.PIN_INPUT);
    setPin(16,ExternalIF.C_DOUBLE,element.PIN_INPUT);
    

    element.jSetPinDescription(0,"Inp1");
    element.jSetPinDescription(1,"Inp2");
    element.jSetPinDescription(2,"Inp3");
    element.jSetPinDescription(3,"Inp4");
    element.jSetPinDescription(4,"Inp5");
    
    element.jSetPinDescription(5,"A1");
    element.jSetPinDescription(6,"A2");
    
    element.jSetPinDescription(7,"Out1");
    element.jSetPinDescription(8,"Out2");
    element.jSetPinDescription(9,"Out3");
    element.jSetPinDescription(10,"Out4");
    element.jSetPinDescription(11,"Out5");
    element.jSetPinDescription(12,"Out6");
    element.jSetPinDescription(13,"Out7");
    element.jSetPinDescription(14,"Out8");
    
    element.jSetPinDescription(15,"DAC1");
    element.jSetPinDescription(16,"DAC2");

    element.jSetCaptionVisible(true);
    element.jSetCaption("K8055 Board");

    setName("K8055");
  }





  public void initInputPins()
  {
    inOut1=(VSBoolean)element.getPinInputReference(7);
    inOut2=(VSBoolean)element.getPinInputReference(8);
    inOut3=(VSBoolean)element.getPinInputReference(9);
    inOut4=(VSBoolean)element.getPinInputReference(10);
    inOut5=(VSBoolean)element.getPinInputReference(11);
    inOut6=(VSBoolean)element.getPinInputReference(12);
    inOut7=(VSBoolean)element.getPinInputReference(13);
    inOut8=(VSBoolean)element.getPinInputReference(14);
    
    inAC1=(VSDouble)element.getPinInputReference(15);
    inAC2=(VSDouble)element.getPinInputReference(16);

    if (inOut1==null) inOut1= new VSBoolean();
    if (inOut2==null) inOut2= new VSBoolean();
    if (inOut3==null) inOut3= new VSBoolean();
    if (inOut4==null) inOut4= new VSBoolean();
    if (inOut5==null) inOut5= new VSBoolean();
    if (inOut6==null) inOut6= new VSBoolean();
    if (inOut7==null) inOut7= new VSBoolean();
    if (inOut8==null) inOut8= new VSBoolean();
    
    if (inAC1==null) inAC1= new VSDouble();
    if (inAC2==null) inAC2= new VSDouble();
  }

  public void initOutputPins()
  {
    element.setPinOutputReference(0,outInp1);
    element.setPinOutputReference(1,outInp2);
    element.setPinOutputReference(2,outInp3);
    element.setPinOutputReference(3,outInp4);
    element.setPinOutputReference(4,outInp5);
    element.setPinOutputReference(5,outA1);
    element.setPinOutputReference(6,outA2);
  }


    public void start()
    {
      try
      {
        isOpen=false;
        //System.out.println("Start:" + TWUsb.getInfo());
        try
        {
          System.out.println("OpenDevice: " + TWUsb.OpenDevice(TWUsb.ADDRESSE_0));
          isOpen=true;
        } catch (RuntimeException pvException)
        {
          System.out.println("RuntimeException");
          pvException.printStackTrace();
        }

        if (isOpen)
        {
          TWUsb.ClearAllDigital();
          TWUsb.ClearAllAnalog();
        }

      } catch (TWUsbException pvException)
      {
          System.out.println("TWUsbException: " + pvException.getLocalizedMessage());
      }

        timer.start();


    }

  public void stop()
  {
    if (timer!=null && isOpen)
    {
      timer.stop();
      try
      {
        Thread.sleep(100);
        System.out.println("CloseDevice");
        TWUsb.CloseDevice();
      }catch (Exception ex)
      {
        System.out.println(ex);
        isOpen=false;
      }
    }
  }


}
 
 

