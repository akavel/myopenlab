//********************************
//* Autor : Carmelo Salafia      *
//* eMail : cswi@gmx.de          *
//* Datum : 10.08.2005           *
//********************************


import VisualLogic.*;
import VisualLogic.variables.*;
import tools.*;

import java.awt.*;
import java.awt.event.*;
import javax.swing.Timer;
import javax.swing.*;

public class Counter extends JVSMain
{
  private VSDouble min=new VSDouble();
  private VSDouble max=new VSDouble();
  private VSDouble step=new VSDouble();
  private VSDouble out = new VSDouble();
  
  private VSBoolean inReset;
  private VSBoolean inON;
  
  boolean started=false;
  
  private double counter=0;
  
  private Image image;
  
  public void paint(java.awt.Graphics g)
  {
    drawImageCentred(g,image);
  }
   
  public void init()
  {
    initPins(0,1,0,2);
    setSize(32+20,32);

    initPinVisibility(false,true,false,true);

    setPin(0,ExternalIF.C_DOUBLE,element.PIN_OUTPUT);
    
    setPin(1,ExternalIF.C_BOOLEAN,element.PIN_INPUT);
    setPin(2,ExternalIF.C_BOOLEAN,element.PIN_INPUT);

    element.jSetPinDescription(0,"Out");
    element.jSetPinDescription(1,"Reset");
    element.jSetPinDescription(2,"On/Off");
    
    String fileName=element.jGetSourcePath()+"icon.gif";
    image=element.jLoadImage(fileName);
    
    setName("Counter");
    min.setValue(0);
    max.setValue(1000);
    step.setValue(1);
  }


  public void process()
  {

    if (counter>max.getValue()) counter=min.getValue();
    

    if (inON.getValue()==true)
    {
       out.setValue(counter);
       counter=counter+step.getValue();
       out.setChanged(true);
    } else
    {
      if (!started)out.setChanged(false);
      started=false;
    }

    if (inReset.isChanged() && inReset.getValue()==true)
    {
      counter=0;
      out.setValue(counter);
      out.setChanged(true);
    }

  }
  

  public void initInputPins()
  {
    inReset=(VSBoolean)element.getPinInputReference(1);
    inON=(VSBoolean)element.getPinInputReference(2);
    
    if (inReset==null) inReset=new VSBoolean(false);
    if (inON==null) inON=new VSBoolean(false);
  }

  public void initOutputPins()
  {
    element.setPinOutputReference(0,out);
  }
  
  public void start()
  {
    counter=min.getValue();
    out.setValue(counter);
    started=true;
  }

  
  public void setPropertyEditor()
  {
    element.jAddPEItem("min",min, 0,0);
    element.jAddPEItem("max",max, 1,99999999);
    element.jAddPEItem("step",step, 0,99999);
  }


  public void loadFromStream(java.io.FileInputStream fis)
  {
      min.loadFromStream(fis);
      max.loadFromStream(fis);
      step.loadFromStream(fis);
  }

  public void saveToStream(java.io.FileOutputStream fos)
  {
      min.saveToStream(fos);
      max.saveToStream(fos);
      step.saveToStream(fos);
  }



}
