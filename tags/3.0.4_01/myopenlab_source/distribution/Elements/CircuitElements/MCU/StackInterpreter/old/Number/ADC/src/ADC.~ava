//********************************
//* Autor : Carmelo Salafia      *
//* eMail : cswi@gmx.de          *
//* Datum : 10.08.2005           *
//********************************


import VisualLogic.*;
import VisualLogic.variables.*;
import tools.*;

import java.awt.*;
import javax.swing.*;
import java.awt.event.*;


public class ADC extends JVSMain
{
  private VSInteger value=new VSInteger(0);
  private VSInteger out=new VSInteger();
  private boolean changed=false;
  private Image image;
  private Font fnt = new Font("Courier",0,12);


public void paint(java.awt.Graphics g)
  {
     if (element!=null)
    {
       Graphics2D g2=(Graphics2D)g;
       Rectangle bounds=element.jGetBounds();
       g2.setColor(Color.YELLOW);
       g.fillRect(bounds.x,bounds.y,bounds.width-1,bounds.height-1);
       g2.setFont(fnt);
       g2.setColor(Color.BLACK);

       String caption="ADC["+value.getValue()+"]";
       FontMetrics fm = g2.getFontMetrics();


       g.drawString(caption,10,15);
       g.drawRect(bounds.x,bounds.y,bounds.width-1,bounds.height-1);
    }
    //if (image!=null) drawImageCentred(g,image);
  }


  public void onDispose()
  {
    if (image!=null)
    {
      image.flush();
      image=null;
    }
  }
  
  
  private void generateCode()
  {

    int id=element.jGetID();

    // GLOBALS
    String code="";
    /*code+="  DIM ELEMENT"+id+"_OLDVALUE\n";
    element.jSetTag(4, code); // Globals*/
    
    // ALS EVENT_HANDLER Registrieren
    code="";
    code+="  CALL  ELEMENT"+id+" \n";
    element.jSetTag(1, code);


    code="";
    code+="  ADC "+value.getValue()+"  \n";
    code+="  POPI R0   //! ACHTUNG hier werden 2 Bytes reserviert, also R0 und R1. \n";
    code+="  // Params : <OLD-VALUE>, <NEW_VALUE>, <NEXTELEMENT-LABEL>\n";
    code+="  NOTIFY_ON_CHANGED %pin0%, R0, %nextElement0%\n";
    element.jSetTag(2, code);

  }


  public void init()
  {
    initPins(0,1,0,0);
    setSize(70,22);

    initPinVisibility(false,true,false,false);
    
    element.jSetInnerBorderVisibility(false);

    setPin(0,ExternalIF.C_INTEGER,element.PIN_OUTPUT);

    image=element.jLoadImage(element.jGetSourcePath()+"icon.gif");
    
    element.jSetPinDescription(0,"out");
    

    setName("ADC-Input");
    
    generateCode();
  }
  

  public void initInputPins()
  {
  }

  public void initOutputPins()
  {
    element.setPinOutputReference(0,out);
  }



  public void start()
  {
    changed=true;
    //out.setValue(value.getValue());
    element.notifyPin(0);
    
  }

  public void process()
  {
    if (changed)
    {
      changed=false;

    }
  }



  public void setPropertyEditor()
  {
    element.jAddPEItem("Pin-Nr",value, 0,7);
    localize();
  }

  private void localize()
  {
    int d=6;
    String language;

    language="en_US";

    element.jSetPEItemLocale(d+0,language,"Pin-Nr");

    language="es_ES";

    element.jSetPEItemLocale(d+0,language,"Pin-Nr");
  }
  
  public void propertyChanged(Object o)
  {
    generateCode();
    element.jRepaint();
  }


  
  
  
  public void loadFromStream(java.io.FileInputStream fis)
  {
    value.loadFromStream(fis);
    generateCode();
  }

  public void saveToStream(java.io.FileOutputStream fos)
  {
    value.saveToStream(fos);
  }



}



