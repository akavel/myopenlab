/*
 *  Trunc
 */


import VisualLogic.*;
import VisualLogic.variables.*;
import tools.*;
import java.awt.*;
import java.awt.event.*;
import tools.*;
import javax.swing.*;


public class Trigger extends JVSMain
{
  private Image image;
  private VSGroup in;
  private VSGroup out = new VSGroup();

  private VS1DDouble arrayX=new VS1DDouble(0);
  private VS1DDouble arrayY=new VS1DDouble(0);
  private VS1DDouble arrX = new VS1DDouble(0);
  private VS1DDouble arrY = new VS1DDouble(0);



  public void onDispose()
  {
    if (image!=null)
    {
      image.flush();
      image=null;
    }
  }

  public void paint(java.awt.Graphics g)
  {
    drawImageCentred(g,image);
  }


public void trigger(int schwelle)
  {
    if (arrayY!=null)
    {
      int idx=0;
      double val;
      double val2;

      int valueDistance=2;
      for (int i=0;i<arrayY.getValue().length-valueDistance;i++)
      {
        val=arrayY.getValue(i);
        val2=arrayY.getValue(i+valueDistance);
        if (val<0.0 && val2>=0.0)
        {
          idx=i;
          break;
        }
      }
      if (idx>0)
      {
        int c=0;
        for (int x=idx;x<arrayY.getValue().length;x++)
        {
          arrY.setValue(c,arrayY.getValue(x));
          c++;
        }
        for (int x=arrayY.getValue().length-idx;x<arrayY.getValue().length;x++)
        {
          arrY.setValue(x,0);
        }

      }
    }
  }


  public void init()
  {
    initPins(0,1,0,1);
    setSize(50,30);
    element.jSetInnerBorderVisibility(true);
    element.jSetTopPinsVisible(false);
    element.jSetBottomPinsVisible(false);

    image=element.jLoadImage(element.jGetSourcePath()+"icon.gif");


    setPin(0,ExternalIF.C_GROUP,element.PIN_OUTPUT);
    setPin(1,ExternalIF.C_GROUP,element.PIN_INPUT);

    element.jSetPinDescription(0,"Out");
    element.jSetPinDescription(1,"In");

    element.jSetResizable(false);
    element.jSetCaptionVisible(true);
    element.jSetCaption("Trunc");
    setName("Trunc");
    
    out.list.clear();
    out.list.add(arrX);
    out.list.add(arrY);
    element.setPinOutputReference(0,out);
   }



  public void initInputPins()
  {
    in=(VSGroup)element.getPinInputReference(1);
  }

  public void initOutputPins()
  {
    element.setPinOutputReference(0,out);
  }


  public void process()
  {

    if (in !=null && in.list.size()==2 && in.isChanged())
    {
      arrayX=(VS1DDouble)in.list.get(0);
      arrayY=(VS1DDouble)in.list.get(1);

      arrX = new VS1DDouble(arrayX.getValue().length);
      arrY = new VS1DDouble(arrayY.getValue().length);

      double val=0.0;
      
      for (int i=0;i<arrX.getValue().length;i++)
      {
        //arrX.setValue(i,arrayX.getValue(i));
        
        val=arrayY.getValue(i);
        //if (Math.abs(val)<20.0) val=0.0;
        val=val*5;
        arrX.setValue(i,arrayX.getValue(i));
        arrY.setValue(i,val);
      }

      out.list.clear();
      out.list.add(arrX);
      out.list.add(arrY);
      out.setChanged(true);
    } else out.setChanged(false);

  }


}

