//********************************
//* Autor : Carmelo Salafia      *
//* eMail : cswi@gmx.de          *
//* Datum : 25.04.2007           *
//********************************


import VisualLogic.*;
import VisualLogic.variables.*;
import tools.*;

import java.awt.*;
import java.util.*;
import java.awt.event.*;
import javax.swing.*;


public class HexToBytes extends JVSMain
{
  private Image image;

  private VSString inString;

  private VS1DByte outBytes = new VS1DByte(0);


  public void paint(java.awt.Graphics g)
  {
    drawImageCentred(g,image);
  }

  public void onDispose()
  {
    if (image!=null)
    {
      image.flush();
      image=null;
    }
  }

  public void init()
  {
    initPins(0,1,0,1);
    setSize(32+20,32+5);

    initPinVisibility(false,true, false,true);

    element.jSetInnerBorderVisibility(true);


    setPin(0,ExternalIF.C_ARRAY1D_BYTE,element.PIN_OUTPUT);
    setPin(1,ExternalIF.C_STRING,element.PIN_INPUT);

    element.jSetPinDescription(0,"Bytes-Out");
    element.jSetPinDescription(1,"HEX String");


    String fileName=element.jGetSourcePath()+"icon.gif";
    image=element.jLoadImage(fileName);

    element.jSetCaptionVisible(false);
    setName("HEXToBytes");

  }


  public void initInputPins()
  {
    inString=(VSString)element.getPinInputReference(1);
  }

  public void initOutputPins()
  {
    element.setPinOutputReference(0,outBytes);
  }


  public void start()
  {

  }

  public void stop()
  {
  }

  public static byte toUnsigned(final short value)
  {
      return (byte) (0xFF&value);
  }

  public void sendString(String str)
  {
     //String partString = "01 06 07 29 00 01 98 B6";
     String partString = str;
     String[] strings = partString.split(" ");
     
     byte [] dest= new byte[strings.length];

     for (int i=0;i<strings.length;i++)
     {
         String strX=strings[i];
         dest[i]=toUnsigned( (short)Integer.parseInt(strX, 16) );
     }

    outBytes.setValues(dest);

    element.notifyPin(0);
  }


  public void elementActionPerformed(ElementActionEvent evt)
  {

    int idx=evt.getSourcePinIndex();
    switch (idx)
    {
      case 1: sendString(inString.getValue()); break;
    }

  }


}

